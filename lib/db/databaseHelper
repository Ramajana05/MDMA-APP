import 'dart:async';
import 'package:path/path.dart';
import 'package:sqflite/sqflite.dart';

class DatabaseHelper {
  static final _databaseName = 'my_database.db';
  static final _databaseVersion = 1;

  static final table = 'map_objects';

  static final columnId = '_id';
  static final columnType = 'type';
  static final columnCenterLat = 'center_lat';
  static final columnCenterLng = 'center_lng';
  static final columnRadius = 'radius';
  static final columnFillColor = 'fill_color';
  static final columnStrokeColor = 'stroke_color';
  static final columnStrokeWidth = 'stroke_width';
  static final columnPoints = 'points';

  // Make this a singleton class
  DatabaseHelper._privateConstructor();
  static final DatabaseHelper instance = DatabaseHelper._privateConstructor();

  // Only have a single app-wide reference to the database
  static Database? _database;
  Future<Database> get database async {
    if (_database != null) return _database!;
    _database = await _initDatabase();
    return _database!;
  }

  // Open the database, creating the database if it doesn't already exist
  _initDatabase() async {
    String path = await getDatabasesPath();
    String fullPath = join(path, _databaseName);
    return await openDatabase(fullPath,
        version: _databaseVersion,
        onCreate: _onCreate);
  }

  // Create the database tables
  Future<void> _onCreate(Database db, int version) async {
    await db.execute('''
      CREATE TABLE $table (
        $columnId INTEGER PRIMARY KEY,
        $columnType TEXT NOT NULL,
        $columnCenterLat REAL NOT NULL,
        $columnCenterLng REAL NOT NULL,
        $columnRadius REAL,
        $columnFillColor INTEGER,
        $columnStrokeColor INTEGER,
        $columnStrokeWidth INTEGER,
        $columnPoints TEXT
      )
    ''');
  }

  // Insert a map object into the database
  Future<int> insert(Map<String, dynamic> row) async {
    Database db = await instance.database;
    return await db.insert(table, row);
  }

  // Query all map objects from the database
  Future<List<Map<String, dynamic>>> queryAll() async {
    Database db = await instance.database;
    return await db.query(table);
  }
}
